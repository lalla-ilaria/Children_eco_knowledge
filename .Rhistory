ID_check(df = freelists, column = "person_id", interviews$person_id)
freelists$person_id[which(freelists$person_id == "HalHK3275")] <- "HalMK3275"
freelists$person_id[which(freelists$person_id == "SeFSS3223")] <- "SefSS3223"
freelists$person_id[which(freelists$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = freelists, column = "person_id", interviews$person_id)#IDs should be corrected
#questions - long template
ID_check(df = ql, column = "person_id", interviews$person_id)
ql$person_id[which(ql$person_id == "HusRJ1763")] <- "HusKJ1763"
ID_check(df = ql, column = "person_id", interviews$person_id)
#questions - short template
ID_check(df = qs, column = "person_id", interviews$person_id)
qs$person_id[which(qs$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = qs, column = "person_id", interviews$person_id)
#picture recognition
ID_check(df = recognition, column = "person_id", interviews$person_id)
recognition$person_id[which(recognition$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = recognition, column = "person_id", interviews$person_id)
#chores
ID_check(df = chores, column = "person_id", interviews$person_id)
chores$person_id[which(chores$person_id == "YohMA2539")] <- "YahMA2539"
chores$person_id[which(chores$person_id == "MuSSS8891")] <- "MusSS8891"
ID_check(df = chores, column = "person_id", interviews$person_id)
#check and correct household IDs
ID_check(df = interviews, column = "hh_id", census$household_2019)
interviews$hh_id[which(interviews$person_id == "AbuOK4109")] <- "NG018"
interviews$hh_id[which(interviews$person_id == "WahHY3890")] <- "NG002"
ID_check(df = interviews, column = "hh_id", census$household_2019)
interviews$hh_id <- parse_number(interviews$hh_id)
#Anonimize data
interviews$anonyme_id <- anonyme( interviews, "person_id")
freelists$anonyme_id <- anonyme( freelists, "person_id")
ql$anonyme_id <- anonyme( ql, "person_id")
qs$anonyme_id <- anonyme( qs, "person_id")
recognition$anonyme_id <- anonyme( recognition, "person_id")
chores$anonyme_id <- anonyme( chores, "person_id")
interviews  <- interviews  %>% select(anonyme_id, hh_id, age, class) %>% arrange(anonyme_id)
freelists   <- freelists   %>% select(anonyme_id, response)  %>% arrange(anonyme_id)
ql          <- ql          %>% select(anonyme_id, response, swahili, english, notes) %>% arrange(anonyme_id)
qs          <- qs          %>% select(anonyme_id, response, swahili, english, notes) %>% arrange(anonyme_id)
recognition <- recognition %>% select(anonyme_id, name_given, picture_id) %>% arrange(anonyme_id)
chores      <- chores      %>% select(anonyme_id, household_help, money_making, seashells, bird_hunting, hunt_with_dogs, field_help, cow_help, fishing, diving ) %>% arrange(anonyme_id)
write.csv(interviews, file = paste ( here(), "2_Data_preparation/data/1_interviews.csv", sep = "/"))
write.csv(freelists, file = paste ( here(), "2_Data_preparation/data/2_freelists.csv", sep = "/"))
write.csv(ql, file = paste ( here(), "2_Data_preparation/data/3a_ql.csv", sep = "/"))
write.csv(qs, file = paste ( here(), "2_Data_preparation/data/3b_qs.csv", sep = "/"))
write.csv(recognition, file = paste ( here(), "2_Data_preparation/data/4_recognition.csv", sep = "/"))
write.csv(chores, file = paste ( here(), "2_Data_preparation/data/5_chores.csv", sep = "/"))
#interviews
interviews <- read.csv("2_Data_preparation/data/1_interviews.csv")
#load freelists
freelists <- read.csv("2_Data_preparation/data/2_freelists.csv")
#questions - long template
ql <- read.csv("2_Data_preparation/data/3a_ql.csv")
#questions - short template
qs <- read.csv("2_Data_preparation/data/3b_qs.csv")
#picture recognition
recognition <- read.csv("2_Data_preparation/data/4_recognition.csv")
#chores
chores <- read.csv("2_Data_preparation/data/5_chores.csv")
setwd(here())
#interviews
interviews <- read.csv("2_Data_preparation/data/1_interviews.csv")
#load freelists
freelists <- read.csv("2_Data_preparation/data/2_freelists.csv")
#questions - long template
ql <- read.csv("2_Data_preparation/data/3a_ql.csv")
#questions - short template
qs <- read.csv("2_Data_preparation/data/3b_qs.csv")
#picture recognition
recognition <- read.csv("2_Data_preparation/data/4_recognition.csv")
#chores
chores <- read.csv("2_Data_preparation/data/5_chores.csv")
#Load packages
library(tidyverse)
library(here)
#loads functions
if( !exists( "ID_check", mode = "function")) source(paste ( here(), "2_Data_preparation/functions.r", sep = "/") )
#setwd("Y:/eco_pretelli/Wave2")
setwd("~/../Nextcloud/Project/KnowledgeInterviews/")
######################
#DEFINE IDs###########
######################
#Load data
#census as a reference
census <- read.csv("matrices_answers_files/census_BK_2020.csv")
#interviews
interviews <- read.csv("Wave2/FriendsInterview/3_relational_tables/interviews.csv")
#load freelists
freelists <- read.csv("Wave2/FreeListInterview/3_relational_tables/freelists.csv")
#questions - long template
ql <- read.csv("Wave2/EcologicalQuizLong/3_relational_tables/quiz_responses.csv")
#questions - short template
qs <- read.csv("Wave2/EcologicalQuizShort/3_relational_tables/quiz_responses.csv")
#picture recognition
recognition <- read.csv("Wave2/PictureRecognition/3_relational_tables/recognized_items.csv")
#chores
chores <- read.csv("Wave2/FriendsInterview/3_relational_tables/chores.csv")
#correct IDs
#checking confronting original pdfs and comparing to census as reference
#interviews
ID_check(df = interviews, column = "person_id", census$ID)
interviews$person_id[which(interviews$person_id == "YohMA2539")] <- "YahMA2539"
interviews$person_id[which(interviews$person_id == "MuSSS8891")] <- "MusSS8891"
ID_check(df = interviews, column = "person_id", census$ID)#IDs should be corrected
#freelists
ID_check(df = freelists, column = "person_id", interviews$person_id)
freelists$person_id[which(freelists$person_id == "HalHK3275")] <- "HalMK3275"
freelists$person_id[which(freelists$person_id == "SeFSS3223")] <- "SefSS3223"
freelists$person_id[which(freelists$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = freelists, column = "person_id", interviews$person_id)#IDs should be corrected
#questions - long template
ID_check(df = ql, column = "person_id", interviews$person_id)
ql$person_id[which(ql$person_id == "HusRJ1763")] <- "HusKJ1763"
ID_check(df = ql, column = "person_id", interviews$person_id)
#questions - short template
ID_check(df = qs, column = "person_id", interviews$person_id)
qs$person_id[which(qs$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = qs, column = "person_id", interviews$person_id)
#picture recognition
ID_check(df = recognition, column = "person_id", interviews$person_id)
recognition$person_id[which(recognition$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = recognition, column = "person_id", interviews$person_id)
#chores
ID_check(df = chores, column = "person_id", interviews$person_id)
chores$person_id[which(chores$person_id == "YohMA2539")] <- "YahMA2539"
chores$person_id[which(chores$person_id == "MuSSS8891")] <- "MusSS8891"
ID_check(df = chores, column = "person_id", interviews$person_id)
#check and correct household IDs
ID_check(df = interviews, column = "hh_id", census$household_2019)
interviews$hh_id[which(interviews$person_id == "AbuOK4109")] <- "NG018"
interviews$hh_id[which(interviews$person_id == "WahHY3890")] <- "NG002"
ID_check(df = interviews, column = "hh_id", census$household_2019)
interviews$hh_id <- parse_number(interviews$hh_id)
#Anonimize data
interviews$anonyme_id <- anonyme( interviews, "person_id")
freelists$anonyme_id <- anonyme( freelists, "person_id")
ql$anonyme_id <- anonyme( ql, "person_id")
qs$anonyme_id <- anonyme( qs, "person_id")
recognition$anonyme_id <- anonyme( recognition, "person_id")
chores$anonyme_id <- anonyme( chores, "person_id")
interviews  <- interviews  %>% select(anonyme_id, hh_id, age, class) %>% arrange(anonyme_id)
freelists   <- freelists   %>% select(anonyme_id, response)  %>% arrange(anonyme_id)
ql          <- ql          %>% select(anonyme_id, response, swahili, english, notes) %>% arrange(anonyme_id)
qs          <- qs          %>% select(anonyme_id, response, swahili, english, notes) %>% arrange(anonyme_id)
recognition <- recognition %>% select(anonyme_id, name_given, picture_id) %>% arrange(anonyme_id)
chores      <- chores      %>% select(anonyme_id, household_help, money_making, seashells, bird_hunting, hunt_with_dogs, field_help, cow_help, fishing, diving ) %>% arrange(anonyme_id)
write.csv(interviews, file = paste ( here(), "2_Data_preparation/data/1_interviews.csv", sep = "/"))
write.csv(freelists, file = paste ( here(), "2_Data_preparation/data/2_freelists.csv", sep = "/"))
write.csv(ql, file = paste ( here(), "2_Data_preparation/data/3a_ql.csv", sep = "/"))
write.csv(qs, file = paste ( here(), "2_Data_preparation/data/3b_qs.csv", sep = "/"))
write.csv(recognition, file = paste ( here(), "2_Data_preparation/data/4_recognition.csv", sep = "/"))
write.csv(chores, file = paste ( here(), "2_Data_preparation/data/5_chores.csv", sep = "/"))
View(chores)
#chores
chores <- read.csv("2_Data_preparation/data/5_chores.csv")
#Load packages
library(tidyverse)
library(here)
#loads functions
if( !exists( "ID_check", mode = "function")) source(paste ( here(), "2_Data_preparation/functions.r", sep = "/") )
#setwd("Y:/eco_pretelli/Wave2")
setwd("~/../Nextcloud/Project/KnowledgeInterviews/")
######################
#DEFINE IDs###########
######################
#Load data
#census as a reference
census <- read.csv("matrices_answers_files/census_BK_2020.csv")
#interviews
interviews <- read.csv("Wave2/FriendsInterview/3_relational_tables/interviews.csv")
#load freelists
freelists <- read.csv("Wave2/FreeListInterview/3_relational_tables/freelists.csv")
#questions - long template
ql <- read.csv("Wave2/EcologicalQuizLong/3_relational_tables/quiz_responses.csv")
#questions - short template
qs <- read.csv("Wave2/EcologicalQuizShort/3_relational_tables/quiz_responses.csv")
#picture recognition
recognition <- read.csv("Wave2/PictureRecognition/3_relational_tables/recognized_items.csv")
#chores
chores <- read.csv("Wave2/FriendsInterview/3_relational_tables/chores.csv")
#correct IDs
#checking confronting original pdfs and comparing to census as reference
#interviews
ID_check(df = interviews, column = "person_id", census$ID)
interviews$person_id[which(interviews$person_id == "YohMA2539")] <- "YahMA2539"
interviews$person_id[which(interviews$person_id == "MuSSS8891")] <- "MusSS8891"
ID_check(df = interviews, column = "person_id", census$ID)#IDs should be corrected
#freelists
ID_check(df = freelists, column = "person_id", interviews$person_id)
freelists$person_id[which(freelists$person_id == "HalHK3275")] <- "HalMK3275"
freelists$person_id[which(freelists$person_id == "SeFSS3223")] <- "SefSS3223"
freelists$person_id[which(freelists$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = freelists, column = "person_id", interviews$person_id)#IDs should be corrected
#questions - long template
ID_check(df = ql, column = "person_id", interviews$person_id)
ql$person_id[which(ql$person_id == "HusRJ1763")] <- "HusKJ1763"
ID_check(df = ql, column = "person_id", interviews$person_id)
#questions - short template
ID_check(df = qs, column = "person_id", interviews$person_id)
qs$person_id[which(qs$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = qs, column = "person_id", interviews$person_id)
#picture recognition
ID_check(df = recognition, column = "person_id", interviews$person_id)
recognition$person_id[which(recognition$person_id == "SalNS4140")] <- "SalNS4104"
ID_check(df = recognition, column = "person_id", interviews$person_id)
#chores
ID_check(df = chores, column = "person_id", interviews$person_id)
chores$person_id[which(chores$person_id == "YohMA2539")] <- "YahMA2539"
chores$person_id[which(chores$person_id == "MuSSS8891")] <- "MusSS8891"
ID_check(df = chores, column = "person_id", interviews$person_id)
#check and correct household IDs
ID_check(df = interviews, column = "hh_id", census$household_2019)
interviews$hh_id[which(interviews$person_id == "AbuOK4109")] <- "NG018"
interviews$hh_id[which(interviews$person_id == "WahHY3890")] <- "NG002"
ID_check(df = interviews, column = "hh_id", census$household_2019)
interviews$hh_id <- parse_number(interviews$hh_id)
#Anonimize data
interviews$anonyme_id <- anonyme( interviews, "person_id")
freelists$anonyme_id <- anonyme( freelists, "person_id")
ql$anonyme_id <- anonyme( ql, "person_id")
qs$anonyme_id <- anonyme( qs, "person_id")
recognition$anonyme_id <- anonyme( recognition, "person_id")
chores$anonyme_id <- anonyme( chores, "person_id")
interviews  <- interviews  %>% select(anonyme_id, hh_id, age, class) %>% arrange(anonyme_id)
freelists   <- freelists   %>% select(anonyme_id, response)  %>% arrange(anonyme_id)
ql          <- ql          %>% select(anonyme_id, response, swahili, english, notes) %>% arrange(anonyme_id)
qs          <- qs          %>% select(anonyme_id, response, swahili, english, notes) %>% arrange(anonyme_id)
recognition <- recognition %>% select(anonyme_id, name_given, picture_id) %>% arrange(anonyme_id)
chores      <- chores      %>% select(anonyme_id, household_help, money_making, seashells, bird_hunting, hunt_with_dogs, field_help, cow_help, fishing, diving ) %>% arrange(anonyme_id)
write.csv(interviews, file = paste ( here(), "2_Data_preparation/data/1_interviews.csv", sep = "/"), row.names=FALSE)
write.csv(freelists, file = paste ( here(), "2_Data_preparation/data/2_freelists.csv", sep = "/"), row.names=FALSE)
write.csv(ql, file = paste ( here(), "2_Data_preparation/data/3a_ql.csv", sep = "/"), row.names=FALSE)
write.csv(qs, file = paste ( here(), "2_Data_preparation/data/3b_qs.csv", sep = "/"), row.names=FALSE)
write.csv(recognition, file = paste ( here(), "2_Data_preparation/data/4_recognition.csv", sep = "/"), row.names=FALSE)
write.csv(chores, file = paste ( here(), "2_Data_preparation/data/5_chores.csv", sep = "/"), row.names=FALSE)
setwd(here())
#interviews
interviews <- read.csv("2_Data_preparation/data/1_interviews.csv")
#load freelists
freelists <- read.csv("2_Data_preparation/data/2_freelists.csv")
#questions - long template
ql <- read.csv("2_Data_preparation/data/3a_ql.csv")
#questions - short template
qs <- read.csv("2_Data_preparation/data/3b_qs.csv")
#picture recognition
recognition <- read.csv("2_Data_preparation/data/4_recognition.csv")
#chores
chores <- read.csv("2_Data_preparation/data/5_chores.csv")
#load corrections freelist
C <- read.csv("2_Data_preparation/data/freelist_corrections.csv")
#SPECIAL CORRECTIONS
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"] <- "MKALAMU"
freelists[which(freelists$response == "MGULELE" &freelists$anonyme_id == "192431" ),"response"] <- "FUKULILE"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "137323" ),"response"] <- "TONGO"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "13212" ),"response"] <- "MTONGA"
freelists[which(freelists$response == "NDEGE" &freelists$anonyme_id == "83881" ),"response"] <- "GEGE"
freelists[which(freelists$response == "MBAAWZI" &freelists$anonyme_id == "69990" ),"response"] <- "PAANZI"
#correct freelist
for(i in 2 : nrow(C)){
freelists$response [which(freelists$response == C$old[i])] <- C$new[i]
}
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"]
#interviews
interviews <- read.csv("2_Data_preparation/data/1_interviews.csv")
#load freelists
freelists <- read.csv("2_Data_preparation/data/2_freelists.csv")
#questions - long template
ql <- read.csv("2_Data_preparation/data/3a_ql.csv")
#questions - short template
qs <- read.csv("2_Data_preparation/data/3b_qs.csv")
#picture recognition
recognition <- read.csv("2_Data_preparation/data/4_recognition.csv")
#chores
chores <- read.csv("2_Data_preparation/data/5_chores.csv")
######################
#FREELIST#############
######################
######################
#FREELIST#############
######################
#load corrections freelist
freelist_corrections <- read.csv("matrices_answers_files/freelist_corrections.csv")
#search for specific responses
#freelists[which(freelists$response == ""),]
#SPECIAL CORRECTIONS
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"] <- "MKALAMU"
freelists[which(freelists$response == "MGULELE" &freelists$anonyme_id == "192431" ),"response"] <- "FUKULILE"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "137323" ),"response"] <- "TONGO"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "13212" ),"response"] <- "MTONGA"
freelists[which(freelists$response == "NDEGE" &freelists$anonyme_id == "83881" ),"response"] <- "GEGE"
freelists[which(freelists$response == "MBAAWZI" &freelists$anonyme_id == "69990" ),"response"] <- "PAANZI"
#correct freelist
for(i in 2 : nrow(C)){
freelists$response [which(freelists$response == freelist_corrections$old[i])] <- freelist_corrections$new[i]
}
#correct freelist
for(i in 2 : nrow(freelist_corrections)){
freelists$response [which(freelists$response == freelist_corrections$old[i])] <- freelist_corrections$new[i]
}
#load corrections freelist
freelist_corrections <- read.csv("2_Data_preparation/data/freelist_corrections.csv")
#SPECIAL CORRECTIONS
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"] <- "MKALAMU"
freelists[which(freelists$response == "MGULELE" &freelists$anonyme_id == "192431" ),"response"] <- "FUKULILE"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "137323" ),"response"] <- "TONGO"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "13212" ),"response"] <- "MTONGA"
freelists[which(freelists$response == "NDEGE" &freelists$anonyme_id == "83881" ),"response"] <- "GEGE"
freelists[which(freelists$response == "MBAAWZI" &freelists$anonyme_id == "69990" ),"response"] <- "PAANZI"
#correct freelist
for(i in 2 : nrow(freelist_corrections)){
freelists$response [which(freelists$response == freelist_corrections$old[i])] <- freelist_corrections$new[i]
}
#ADD not_a_creature column
######
not_a_creature <- c("ANDAZI", "ASALI",
"BAHARI", "BAISIKELI", "BAKORA", "BAKULI", "BALBU", "BANDARI", "BANGILI", "BAO", "BARABARA", "BARAZA", "BATI", "BEGI", "BESENI", "BETTRY", "BISCUTI", "BO", "BODABODA", "BOKSI", "BOTI", "BUKTA", "BUKU", "BUSATI",
"CAMERA", "CHAI", "CHAJATI", "CHAKULA", "CHANDARUA", "CHAURO", "CHEMSOO", "CHUJIO", "CHUMVI", "CHUPA",
"DAKIKA", "DARAJA BOVU", "DARASA LA KWANZA", "DAU", "DAWA", "DEKI", "DEKSI", "DIRISHA", "DISHI","DISHI LA UMEME", "DULA LA SHINDANO", "DUMU",
"FAGIO", "FAIBA", "FENI", "FINISH", "FIRIMBI MDOMO", "FLASHI", "FONDESHENI", "FONI", "FORONYA", "FREMU", "FULANA", "FUMBUKA",
"GAMBA", "GARI", "GATI", "GLASI", "GODORO", "GOME", "GOME LA MTI", "GONGO", "GUNDI",
"HAMIRA", "HARUSI", "HELICOPTER", "HELMETI", "HERINI",
"JAGI", "JAHAZI", "JARIFE", "JEMBE", "JIKO", "JIKO LA UMEME", "JINI", "JIWE", "JUISI",
"KABATI", "KAHAWIA", "KALAMU", "KANZU", "KARAI", "KARATASI", "KATA", "KAURE", "KAVA", "KIBANDA", "KIBAPA", "KIBATI CHA DAWA", "KICHUPA CHA PODA", "KICHWA", "KIDEVU", "KIDOA", "KIDOO", "KIDUDE CHA KUPIMIA MCHELE", "KIFUA", "KIFUKO", "KIFUNGO", "KIFUNIKIO", "KIFUU", "KIHANJIFU", "KIJIKO", "KIJUZUU", "KIKOBA CHA NYUMA", "KILEMBA", "KIPANDE CHA MNAZI", "KIPIMO", "KIREMBO", "KIROHO", "KISADO", "KISAGIO", "KISIMA", "KISIWA", "KISUGUDI", "KITABU", "KITAMBAA", "KITANDA", "KITI", "KIUNGO", "KIUNGO CHA NGUU", "KIUNO", "KIWEMBE", "KIWI", "KIZIO", "KOFIA", "KOKOCHI", "KOKOTO", "KOKWA ZA FENESI", "KOMA", "KONDE", "KOPA", "KOPE", "KORIDO", "KOROBWE", "KOROGWE", "KOROMA", "KOTI", "KOYA", "KU PAKUA", "KUFULI", "KULA", "KUMVI", "KUNI", "KUPIMA", "KUSUUNZA", "KUTAMBA",
"LEGEZA",
"MACHO", "MADE YA VITANDA", "MADIRA", "MAEPO", "MAFYA", "MAGLAVU", "MAGUBI", "MAJI", "MAJIMAJI", "MAKARARA", "MAKOPO", "MAKOSA", "MAKOSA KUUGWA", "MAKUMBI", "MAKUTI", "MANJANO", "MAPELE", "MASHUA", "MASIKIO", "MATAKO", "MATUTA", "MAVA", "MAVIMAVI", "MAZIWA", "MBEGU", "MBOGA", "MBOGABOGA", "MCHANGA", "MCHOKO", "MCHUZI", "MDOMO", "MELI", "MENO", "MESA", "MFEREJI", "MFUKO", "MFUNIKIO", "MFUNIKIO WA SIMU", "MFUPA WA KUKU", "MFUPI", "MGELEMA", "MGOGONI", "MGUU", "MHIMBILI", "MICHEWENI", "MIKO", "MITA", "MITI YA SHAMBA", "MKAA", "MKIA WA NGOMBE", "MKOANI", "MKONO", "MKONO WA SAA", "MKUFU", "MLANGO", "MNARANI", "MOTO", "MPINI", "MPIRA", "MSAAFU", "MSHIPI", "MSIKITI", "MSINGI", "MSITU", "MSKITINI", "MSTARI", "MSUAKI", "MSUKA", "MSUMENO", "MTANDIO", "MTI", "MTO", "MTOTO", "MTUHALIWA", "MTUMBWI", "MUWASHO", "MWALIMU", "MWIBA", "MWIKO", "MZIGO",
"NDEGE", "NDOANA", "NDOO", "NEMBO", "NGARAWA", "NGUMU", "NGUO", "NJANO", "NJUKUTI", "NOHA", "NSEME", "NYAMA", "NYAVU", "NYAYO", "NYOTA", "NYUMBA", "NYUNDO", "NYUSI", "NYWELE",
"PAIPU", "PAJA", "PAURO", "PEMPAS", "PENI", "PENSELI", "PENSI", "PESA", "PETE", "PEZI", "PICHA", "PIKIPIKI", "POLO", "POVU", "PUA", "PUKUSA", "PWANI",
"RANGI", "RANGI MBILI", "RAYANI", "REDIO", "REZA", "RINGA",
"SAMAKI", "SAA", "SABUFA", "SABUNI", "SABUNI ZA TUMBILI", "SAHANI", "SAMLI", "SARUJI", "SEKUNDE", "SERUNI", "SHANGA", "SHANUO", "SHATI", "SHEITANI", "SHIMO", "SHIMO LA JONGOO", "SHINA LA MBIRIMBI", "SHINDANO", "SHINGO", "SHUKA", "SHUNGI", "SIAGI", "SIMU", "SINGBODI", "SINGILENDI", "SIPIKA", "SKETI", "SOLAR", "SUFURIA", "SUKARI", "SUMAKU", "SUNGUSUNGU", "SURUALI", "SUSA",
"TANGI", "TANGO", "TIME", "TITI", "TORCHI", "TUFALI", "TUI", "TV", "UBONGO", "UCHAFU", "UFUNGUO", "UKUTA", "UMEME", "UNGUJA", "URIMBO", "UZI",
"VESPA", "VIATU", "VIBATALI", "VICHANGA", "VIDEO", "VIDOLE", "VIFIRIMBI", "VIKAO", "VINU", "VIPEZI", "VOMBO", "VOUCHER", "VYOMBO",
"WAGE", "WALETI", "WALI", "WANJA", "WATOTO PACHA", "WATOTO WANAUME PACHA", "WETE", "WIRE",
"YAI",
"ZIPU")
#####
#add not_a_creature column
freelists$not_a_creature <- ifelse( freelists$response  %in% not_a_creature, 1, 0)
#subset freelist to include only creatures
freelists <- freelists[which (freelists$not_a_creature == 0),]
#check results
all_items <- freelists %>% group_by(response) %>% count()
all_items <- all_items[-1,]
#PREPARE DATA
#matrix of answers
Y_l <- matrix(data = NA, nrow = length(interviews$anonyme_id) , ncol = length(all_items$response), dimnames = list( interviews$anonyme_id, all_items$response))
for (i in 1:length(interviews$anonyme_id)) {
for(j in 1:length(all_items$response)){
Y_l[i,j] <- ifelse(nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == rownames(Y_l)[i]
& freelists$response == colnames(Y_l)[j] ),]) >= 1 , 1, 0)
}
}
#relevant notes - adding questions
extra_qns <- list(
kamba_a = c("KAMBA (A)", "KAMBA A", "KAMBAA", "KAMSA A", "MAFUTA / KAMDA A"),
kamba_b = c("KAMBA B"),
kutambaa_a = c("KUTAMBAA A"),
kutambaa_b = c("KUTAMBAA B", "KUTAMBAA B PARABE"),
kutambaa_nk= c("KUTAMBAA BOTH", "KUTAMBAA DONT KNOW", "KUTAMBAA NONE"),
mikandaa_a = c("MIKANDAA A"),
mikandaa_b = c("MIK. B", "MIKANDA B","MIKANDAA B","MIKANDAA B DONT KNOW","MIKANOAA B", "TOONDO B"),
mikandaa_nk= c("MIKANDAA BOTH","MIKANDAA DONT KNOW","MIKANDAA NONE"),
ngisi_a = c("BOTH NGIJI A","BOTH NGIZI A","NGIJI A", "NGISI A", "WGISI AA"),
ngisi_b = c("NGISI B", "NGIZI B"),
chowe_a = c("UFUKWENI A"),
chowe_b = c("UFUKWENI B", "VFUKWENI B"),
chowe_nk = c("UFUFWENI BOTH", "UFUKWENI BOTH", "UFUKWENI Dont know", "UFUKWENI DONT KNOW", "UFUKWENI NOT KNOW"),
vijinu_a = c("UIJINU A", "UIJINV A", "VIJINU A", "VIJINU"),
vijinu_b = c("UIJINU B", "VIJINU B"),
vijinu_nk = c("UIJINU DONTKNN", "VIJINU DONT KNOW", "VIJINU NOT KNOW",  "VIJINV DONTKWN"))
extra_answers <- list(
swahili = c( "kamba","kamba",
"kutambaa","kutambaa","kutambaa",
"mikandaa","mikandaa","mikandaa",
"ngisi","ngisi",
"chowe","chowe","chowe",
"vijinu","vijinu","vijinu"),
english = c( "shrimps","shrimps",
"vine","vine","vine",
"mangroves","mangroves","mangroves",
"squid","squid",
"shells","shells","shells",
"cone_shells","cone_shells","cone_shells"),
response = c( "a", "b",
"a", "b", "not_known",
"a", "b", "not_known",
"a", "b",
"a", "b", "not_known",
"a", "b", "not_known")
)
for (i in 1:length(extra_qns)) {
new_rows <- qs[which(qs$notes %in% extra_qns[[i]]),]
new_rows$swahili <- extra_answers$swahili[i]
new_rows$english <- extra_answers$english[i]
new_rows$response <- extra_answers$response[i]
qs <- rbind(qs, new_rows)
}
#bind dataframes
questionnaire <- rbind(ql, qs)
#correct questions
questionnaire$swahili[which(questionnaire$english == "sharks_offspring")] <- "papa_watoto"
questionnaire$swahili[which(questionnaire$english == "sharks_dangerous")] <- "papa_mkali"
#load correct answers
correct_answers <- read.csv("matrices_answers_files/questions_correct_answers.csv")
correct_answers <- correct_answers %>%  select(QN.number, Right.answer ) %>%
rename( swahili = QN.number, right_answer = Right.answer)
correct_answers$right_answer <- tolower(correct_answers$right_answer)
#create matrix
Y_q <- matrix(data = NA, nrow = length(interviews$anonyme_id) , ncol = length(unique(questionnaire$swahili)), dimnames = list( interviews$anonyme_id, unique(questionnaire$swahili)))
for (i in 1:length(interviews$anonyme_id)) {
for(j in 1:length(unique(questionnaire$swahili))){
Y_q[i,j] <- nrow(questionnaire[ #per each individual and question, if the answer given is correct, the datafame will be restricted to one row - giving 1 in the matrix. Check that there is not
which(questionnaire$anonyme_id == rownames(Y_q)[i] #finds individual ID
& questionnaire$swahili == colnames(Y_q)[j] #finds question ID
& questionnaire$response == correct_answers[which(correct_answers$swahili == colnames(Y_q)[j]), "right_answer"]),]) #checks if answer is correct
}
}
#interviews
interviews <- read.csv("2_Data_preparation/data/1_interviews.csv")
#load freelists
freelists <- read.csv("2_Data_preparation/data/2_freelists.csv")
#questions - long template
ql <- read.csv("2_Data_preparation/data/3a_ql.csv")
#questions - short template
qs <- read.csv("2_Data_preparation/data/3b_qs.csv")
#picture recognition
recognition <- read.csv("2_Data_preparation/data/4_recognition.csv")
#chores
chores <- read.csv("2_Data_preparation/data/5_chores.csv")
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"]
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"] <- "MKALAMU"
freelists[which(freelists$response == "MGULELE" &freelists$anonyme_id == "192431" ),"response"] <- "FUKULILE"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "137323" ),"response"] <- "TONGO"
freelists[which(freelists$response == "MITONGO" &freelists$anonyme_id == "13212" ),"response"] <- "MTONGA"
freelists[which(freelists$response == "NDEGE" &freelists$anonyme_id == "83881" ),"response"] <- "GEGE"
freelists[which(freelists$response == "MBAAWZI" &freelists$anonyme_id == "69990" ),"response"] <- "PAANZI"
freelists[which(freelists$response == "KALAMU" &freelists$anonyme_id == "192109" ),"response"]
#load corrections freelist
freelist_corrections <- read.csv("2_Data_preparation/data/freelist_corrections.csv")
#correct freelist
for(i in 2 : nrow(freelist_corrections)){
freelists$response [which(freelists$response == freelist_corrections$old[i])] <- freelist_corrections$new[i]
}
#ADD not_a_creature column
######
not_a_creature <- c("ANDAZI", "ASALI",
"BAHARI", "BAISIKELI", "BAKORA", "BAKULI", "BALBU", "BANDARI", "BANGILI", "BAO", "BARABARA", "BARAZA", "BATI", "BEGI", "BESENI", "BETTRY", "BISCUTI", "BO", "BODABODA", "BOKSI", "BOTI", "BUKTA", "BUKU", "BUSATI",
"CAMERA", "CHAI", "CHAJATI", "CHAKULA", "CHANDARUA", "CHAURO", "CHEMSOO", "CHUJIO", "CHUMVI", "CHUPA",
"DAKIKA", "DARAJA BOVU", "DARASA LA KWANZA", "DAU", "DAWA", "DEKI", "DEKSI", "DIRISHA", "DISHI","DISHI LA UMEME", "DULA LA SHINDANO", "DUMU",
"FAGIO", "FAIBA", "FENI", "FINISH", "FIRIMBI MDOMO", "FLASHI", "FONDESHENI", "FONI", "FORONYA", "FREMU", "FULANA", "FUMBUKA",
"GAMBA", "GARI", "GATI", "GLASI", "GODORO", "GOME", "GOME LA MTI", "GONGO", "GUNDI",
"HAMIRA", "HARUSI", "HELICOPTER", "HELMETI", "HERINI",
"JAGI", "JAHAZI", "JARIFE", "JEMBE", "JIKO", "JIKO LA UMEME", "JINI", "JIWE", "JUISI",
"KABATI", "KAHAWIA", "KALAMU", "KANZU", "KARAI", "KARATASI", "KATA", "KAURE", "KAVA", "KIBANDA", "KIBAPA", "KIBATI CHA DAWA", "KICHUPA CHA PODA", "KICHWA", "KIDEVU", "KIDOA", "KIDOO", "KIDUDE CHA KUPIMIA MCHELE", "KIFUA", "KIFUKO", "KIFUNGO", "KIFUNIKIO", "KIFUU", "KIHANJIFU", "KIJIKO", "KIJUZUU", "KIKOBA CHA NYUMA", "KILEMBA", "KIPANDE CHA MNAZI", "KIPIMO", "KIREMBO", "KIROHO", "KISADO", "KISAGIO", "KISIMA", "KISIWA", "KISUGUDI", "KITABU", "KITAMBAA", "KITANDA", "KITI", "KIUNGO", "KIUNGO CHA NGUU", "KIUNO", "KIWEMBE", "KIWI", "KIZIO", "KOFIA", "KOKOCHI", "KOKOTO", "KOKWA ZA FENESI", "KOMA", "KONDE", "KOPA", "KOPE", "KORIDO", "KOROBWE", "KOROGWE", "KOROMA", "KOTI", "KOYA", "KU PAKUA", "KUFULI", "KULA", "KUMVI", "KUNI", "KUPIMA", "KUSUUNZA", "KUTAMBA",
"LEGEZA",
"MACHO", "MADE YA VITANDA", "MADIRA", "MAEPO", "MAFYA", "MAGLAVU", "MAGUBI", "MAJI", "MAJIMAJI", "MAKARARA", "MAKOPO", "MAKOSA", "MAKOSA KUUGWA", "MAKUMBI", "MAKUTI", "MANJANO", "MAPELE", "MASHUA", "MASIKIO", "MATAKO", "MATUTA", "MAVA", "MAVIMAVI", "MAZIWA", "MBEGU", "MBOGA", "MBOGABOGA", "MCHANGA", "MCHOKO", "MCHUZI", "MDOMO", "MELI", "MENO", "MESA", "MFEREJI", "MFUKO", "MFUNIKIO", "MFUNIKIO WA SIMU", "MFUPA WA KUKU", "MFUPI", "MGELEMA", "MGOGONI", "MGUU", "MHIMBILI", "MICHEWENI", "MIKO", "MITA", "MITI YA SHAMBA", "MKAA", "MKIA WA NGOMBE", "MKOANI", "MKONO", "MKONO WA SAA", "MKUFU", "MLANGO", "MNARANI", "MOTO", "MPINI", "MPIRA", "MSAAFU", "MSHIPI", "MSIKITI", "MSINGI", "MSITU", "MSKITINI", "MSTARI", "MSUAKI", "MSUKA", "MSUMENO", "MTANDIO", "MTI", "MTO", "MTOTO", "MTUHALIWA", "MTUMBWI", "MUWASHO", "MWALIMU", "MWIBA", "MWIKO", "MZIGO",
"NDEGE", "NDOANA", "NDOO", "NEMBO", "NGARAWA", "NGUMU", "NGUO", "NJANO", "NJUKUTI", "NOHA", "NSEME", "NYAMA", "NYAVU", "NYAYO", "NYOTA", "NYUMBA", "NYUNDO", "NYUSI", "NYWELE",
"PAIPU", "PAJA", "PAURO", "PEMPAS", "PENI", "PENSELI", "PENSI", "PESA", "PETE", "PEZI", "PICHA", "PIKIPIKI", "POLO", "POVU", "PUA", "PUKUSA", "PWANI",
"RANGI", "RANGI MBILI", "RAYANI", "REDIO", "REZA", "RINGA",
"SAMAKI", "SAA", "SABUFA", "SABUNI", "SABUNI ZA TUMBILI", "SAHANI", "SAMLI", "SARUJI", "SEKUNDE", "SERUNI", "SHANGA", "SHANUO", "SHATI", "SHEITANI", "SHIMO", "SHIMO LA JONGOO", "SHINA LA MBIRIMBI", "SHINDANO", "SHINGO", "SHUKA", "SHUNGI", "SIAGI", "SIMU", "SINGBODI", "SINGILENDI", "SIPIKA", "SKETI", "SOLAR", "SUFURIA", "SUKARI", "SUMAKU", "SUNGUSUNGU", "SURUALI", "SUSA",
"TANGI", "TANGO", "TIME", "TITI", "TORCHI", "TUFALI", "TUI", "TV", "UBONGO", "UCHAFU", "UFUNGUO", "UKUTA", "UMEME", "UNGUJA", "URIMBO", "UZI",
"VESPA", "VIATU", "VIBATALI", "VICHANGA", "VIDEO", "VIDOLE", "VIFIRIMBI", "VIKAO", "VINU", "VIPEZI", "VOMBO", "VOUCHER", "VYOMBO",
"WAGE", "WALETI", "WALI", "WANJA", "WATOTO PACHA", "WATOTO WANAUME PACHA", "WETE", "WIRE",
"YAI",
"ZIPU")
#add not_a_creature column
freelists$not_a_creature <- ifelse( freelists$response  %in% not_a_creature, 1, 0)
#subset freelist to include only creatures
freelists <- freelists[which (freelists$not_a_creature == 0),]
#check results
all_items <- freelists %>% group_by(response) %>% count()
all_items <- all_items[-1,]
#PREPARE DATA
#matrix of answers
Y_l <- matrix(data = NA, nrow = length(interviews$anonyme_id) , ncol = length(all_items$response), dimnames = list( interviews$anonyme_id, all_items$response))
nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == rownames(Y_l)[i]
& freelists$response == colnames(Y_l)[j] ),])
i<-1
j<-1
nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == rownames(Y_l)[i]
& freelists$response == colnames(Y_l)[j] ),])
ifelse(nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == rownames(Y_l)[i]
& freelists$response == colnames(Y_l)[j] ),]) >= 1 , 1, 0)
View(freelists)
ifelse(nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == 11115
& freelists$response == "colnames(Y_l)[j]"SIMBA ),]) >= 1 , 1, 0)
ifelse(nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == 11115
& freelists$response == "SIMBA" ),]) >= 1 , 1, 0)
for (i in 1:length(interviews$anonyme_id)) {
for(j in 1:length(all_items$response)){
Y_l[i,j] <- ifelse(nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == rownames(Y_l)[i]
& freelists$response == colnames(Y_l)[j] ),]) >= 1 , 1, 0)
}
}
length(all_items$response)
length(interviews$anonyme_id)
#PREPARE DATA
#matrix of answers
Y_l <- matrix(data = NA, nrow = length(interviews$anonyme_id) , ncol = length(all_items$response), dimnames = list( interviews$anonyme_id, all_items$response))
for (i in 1:length(interviews$anonyme_id)) {
for(j in 1:length(all_items$response)){
Y_l[i,j] <- ifelse(nrow(freelists[ #if at least a row where individual i names object j exist, write 1
which(freelists$anonyme_id == rownames(Y_l)[i]
& freelists$response == colnames(Y_l)[j] ),]) >= 1 , 1, 0)
}
}
